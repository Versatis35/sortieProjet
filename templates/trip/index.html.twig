{% extends 'base.html.twig' %}

{%  block title %} Accueil {%  endblock %}

{% block body %}
<div class="container">
    <div class="row">
        <div class="col-9"></div>
        <div class="col-3">
            <h5>Date du jour : {{ 'now'|date('d - m -Y') }}</h5>
            <h5>Participant : {{ user.prenom }} {{ user.nom }} </h5>
            <div class="invisible" id="url">{{ app.request.getBaseURL() }}</div>
        </div>
    </div>
    <div class="row">
        <div class="col-5">
            <h6>Filtrer les sorties</h6>
            <label for="site">Site : </label>
            <select class="form-control" id="site" name="site">
                <option value="0">Tous les sites</option>
                {% for place in places %}
                    <option value="{{ place.id }}">{{ place.nom }}</option>
                {% endfor %}
            </select>
            <label for="content">Le nom de la sortie contient : </label>
            <input class="form-control" type="search" name="content" id="content">
            <div class="row">
                <div class="col-6">
                    <label for="dateStart">Entre </label>
                    <input class="form-control" type="date" id="dateStart" name="dateStart">
                </div>
                <div class="col-6">
                    <label for="dateEnd"> et </label>
                    <input class="form-control" type="date" id="dateEnd" name="dateEnd">
                </div>
            </div>
        </div>
        <div class="col-4 mt-3">
            <div class="form-check border border-dark mt-5">
                <label for="orga" class="form-check-label">Sorties dont je suis l'organisateur/trice</label>
                <input type="checkbox" class="form-check-input" name="orga" id="orga">

                <label for="inscrit" class="form-check-label">Sorties auxquelles je suis inscrit/e</label>
                <input type="checkbox" class="form-check-input" name="inscrit" id="inscrit">

                <label for="notInscrit" class="form-check-label">Sorties auxquelles je ne suis pas inscrit/e</label>
                <input type="checkbox" class="form-check-input" name="notInscrit" id="notInscrit">

                <label for="last" class="form-check-label">Sorties passées</label>
                <input type="checkbox" class="form-check-input" name="last" id="last">
            </div>
        </div>
        <div class="col-3">
            <div class="d-grid gap-2 mt-5">
                <button class="btn btn-primary mt-5" onclick="doFilter()" type="submit">Rechercher</button>
            </div>
        </div>
    </div>
    <hr>
    <div id="addBlock">
    {{ include('trip/tableTrip.html.twig', {'trips': trips, 'user': user}) }}
    </div>
    <br>
    <a href="{{ path('creation_sortie') }}" class="btn btn-primary">Créer une sortie</a>

</div>
    <template id="ligne">
        <tr>
            <td> </td>
            <td> </td>
            <td> </td>
            <td> </td>
            <td> </td>
            <td> </td>
            <td> </td>
            <td>
                {#
                {% if trip.etat.id != 1 and trip.etat.id != 5%}
                    <a href="{{ path('detail_sortie', {'id': trip.id}) }}" class="btn btn-primary" id="afficher">Afficher</a>
                {% endif %}
                {% if trip.organisateur.id == user.id and trip.etat.id == 1%}
                    <a href="{{ path('edit_sortie', {'id': trip.id}) }}" class="btn btn-primary" id="modifier">Modifier</a>
                {% endif %}
                {% if trip.organisateur.id == user.id and trip.etat.id == 1  %}
                    <a href="{{ path('publier_sortie', {'id': trip.id}) }}" class="btn btn-success" id="publier">Publier</a>
                {% endif %}
                {% if trip.organisateur.id != user.id and user not in trip.participants %}
                    {% if trip.etat.id == 2 or trip.etat.id == 4 %}
                        <a href="{{ path('inscriptionSortie', {'id': trip.id}) }}" class="btn btn-success" id="inscrire">S'inscrire</a>
                    {% endif %}
                {% endif %}
                {% if trip.organisateur.id != user.id and user in trip.participants%}
                    {% if trip.etat.id == 2 or trip.etat.id == 4 %}
                        <a href="{{ path('desistement', {'id': trip.id}) }}" class="btn btn-danger" id="desister">Se desister</a>
                    {% endif %}
                {% endif %}
                {% if trip.organisateur.id == user.id %}
                    {% if trip.etat.id == 1 or trip.etat.id == 2 %}
                        <a href="{{ path('annuler_sortie', {'id': trip.id}) }}" class="btn btn-danger" id="annuler">Annuler</a>
                    {% endif %}
                {% endif %}
                #}
            </td>
        </tr>
    </template>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    let UrlBase = document.getElementById('url').innerHTML;
    let url = 'http://localhost' + UrlBase +'/axiosTable/';

    function doFilter() {
        let site = document.getElementById('site').value;
        let searchWord = document.getElementById('content').value;
        let dateStart = document.getElementById('dateStart').value;
        let dateEnd = document.getElementById('dateEnd').value;
        let checkOrga = document.getElementById('orga').checked;
        let checkInscrit = document.getElementById('inscrit').checked;
        let checkNot = document.getElementById('notInscrit').checked;
        let checkLast = document.getElementById('last').checked;
        if(searchWord === undefined) searchWord = "";
        if(dateStart === undefined) dateStart = "";
        if(dateEnd === undefined) dateEnd = "";
        let addBlock = document.getElementById('addBlock');
        let table = document.getElementById('removeTable');
        UrlBase = document.getElementById('url').innerHTML;
        url = 'http://localhost' + UrlBase +'/axiosTable/';
        axios.post(url,{
            data: {
                site: site,
                searchWord: searchWord,
                dateStart: dateStart,
                dateEnd: dateEnd,
                checkInscrit: checkInscrit,
                checkNot: checkNot,
                checkOrga: checkOrga,
                checkLast: checkLast
            }
        }).then(function (response) {
            let tableau = response.data;
            console.log(tableau);
            chargerTableau(tableau);
        });
    }

    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;

        return [year, month, day].join('/');
    }

    function chargerTableau(tableau) {
        let tbody = document.querySelector('#tBody');
        tbody.innerHTML = "";
        for( let sortie of tableau){
            let template = document.querySelector('#ligne');
            let clone = template.content.cloneNode(true);
            // je met le clone a l'intérieur du tbody

            //  un tableau de selecteur td
            let td = clone.querySelectorAll("td");
            td[0].innerHTML = sortie.nom;
            td[1].innerHTML = formatDate(sortie.dateSortie);
            td[2].innerHTML = formatDate(sortie.dateLimite);
            td[3].innerHTML = sortie.nb_participants +"/"+ sortie.nbPlace;
            td[4].innerHTML = sortie.libelle;
            td[5].innerHTML = "";
            td[6].innerHTML = sortie.Organisateur;
            //let btnEnlever = clone.querySelector('.btn-danger');
            //btnEnlever.setAttribute('data-id',item.id);
            //let btnCheck = clone.querySelector('.btn-primary');
            //btnCheck.setAttribute('data-id',item.id);
            tbody.appendChild(clone);
        }
    }

    axios.post(url,{
        data: {
            site: "0",
            searchWord: "",
            dateStart: "",
            dateEnd: "",
            checkInscrit: false,
            checkNot: false,
            checkOrga: false,
            checkLast: false
        }
    }).then(function (response) {
        let tableau = response.data;
        console.log(tableau);
        chargerTableau(tableau);
    });
</script>
{% endblock %}